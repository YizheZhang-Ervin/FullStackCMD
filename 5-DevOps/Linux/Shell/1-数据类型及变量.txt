
# 字符串
(1)单引号(其中使用拼接字符串中无效)/双引号(内部可拼接字符串)/无引号(可拼接但不能有空格)
(2)长度 ${#变量名}
(3)拼接:无符号拼接${xx}${yy}/双引号拼接"${xx} something ${yy}"/混合拼接${xx}"something"${yy}
(4)字符串截取:${varname:start:length}/${varname:start}/${varname:0-start:length}右侧开始/${varname:0-start}/${varname#*chars}左侧第一次出现字符右边的所有字符/${varname##*chars}左侧最后一次出现字符右边的所有字符/${varname%chars*}右侧第一次出现字符左边的所有字符/${varname%%chars*}右侧最后一次出现字符左边的所有字符

# 数组
(1)定义arr_name=([下标1]=item1,[下标2]=item2)或arr_name=(item1,item2)
arr[下标]=值
(2)取值 item=${arr_name[index]}
所有元素${arr_name[*]}/${arr_name[@]}
(3)长度${#arr_name[@]}/${#arr_name[*]}
某个元素长度${#arr_name[index]}
(4)拼接arr=(${arr1[*]} ${arr2[*]})
(5)删除unset arr[index]/unset arr

# 注释格式
# 单行:井号
:<<!
多行使用:<<! + !
!

# 运算符
expr 表达式
result = `expr 表达式` (反引号可执行其中的命令)
1.算术运算符
整数+-*/%=，*和括号要转义
表达式内得有空格
2.比较运算符(返回值是0/否1)
(1)整数 
[value1 运算符A value2] 或 ((value1 运算符B value2))
运算符A可为：eq相等/ne不相等/gt大于/lt小于/ge大于等于/le小于等于
运算符B可为：==/!=/>/</>=/<=
(2)字符串
[]用>要转义，会把空格字符串分割后比较
[[]]不用转义，不会拆分空格字符串
没有<=和>=用&&拼接代替
==或=相等/!=不等于/<小于/>大于/-z长度是否为0/-n长度是否不为0/$是否为空
3.布尔运算符
[value1 运算符 value2]或者test命令
!取反/-o或/-a与
4.逻辑运算符
逻辑或/逻辑与可放在[[]]或(())，逻辑非可在[]或[[]]不可在(())
&&逻辑与/||逻辑或/!逻辑非
5.文件测试运算符
文件类型：-:普通文件/d:目录文件/l:链接文件/:b块设备文件/c:字符设备文件/p:管道文件
-b/-c/-d/-f/-g/-k/-p/-u/-r/-w/-x/-s/-e/-nt测新/-ot测老/-S/-L